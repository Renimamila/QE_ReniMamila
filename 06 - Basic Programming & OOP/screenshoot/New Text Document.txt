Object-Oriented Programming atau OOP adalah suatu metode programming yang berorientasi pada objek. Program-program tersebut merupakan gabungan dari beberapa komponen kecil yang telah ada sebelumnya, sehingga dapat mempermudah pekerjaan seorang programmer dalam melakukan pengembangan.
OOP adalah cocok di gunakan untuk membuat program yang menerapkan kehidupan sehari-hari. Dengan OOP para pengembang bisa menjadi software pada objek-objek tertentu.

Prinsip-prinsip OOP
1. Encapsulation
    PengertianEncapsulation pada OOP adalah konsep tentang pengikatan data atau metode berbeda yang di satukan atau “dikapsulkan” menjadi satu unit data.
    Encapsulation dapat memudahkan dalam pembacaan kode karena informasi yang di sajikan tidak perlu di baca secara rinci dan sudah merupakan satu kesatuan.
2. Inheritance
    Prinsip inheritance pada OOP adalah di mana kita dapat membentuk class baru yang “mewarisi” atau memiliki bagian-bagian dari class yang sudah ada sebelumnya.
    Konsep ini menggunakan sistem hirarki atau bertingkat.
3. Abstract Class
    Seperti namanya, prinsip abstract class OOP adalah class-class yang memiliki informasi abstrak dan metode-metode dari sekumpulan data.
    Abstract Class tidak bisa di ubah dan  berlaku juga sebagai kerangka dalam penciptaan berbagai subclass (berperan seperti Superclass yang di bahas di konsep Inheritance).
4. Polymorphism
    Prinsip polymorphism pada OOP adalah konsep di mana suatu objek berbeda-beda dapat di akses melalui satu interface. Sebuah objek polymorphic dapat beradaptasi dengan metode apapun yang di implementasikan pada objek tersebut,
    dan setiap class memiliki interpretasinya tersendiri terhadap interfacenya.
    
